> resetLogs

# A happy test
> mochaOnly HappyAssetSpec
> logged info "a test asset"
> logged info "+ should be happy"
> logged info "+ should be able to require a main asset"
> logged info "+ should be able to require a main resource"
> logged info "Passed: Total 3, Failed 0, Errors 0, Passed 3"
> noErrors

> resetLogs

# Make sure specs don't get picked up from the src/test/public directory
> mochaOnly HappyPublicSpec
> logged info "Passed: Total 0, Failed 0, Errors 0, Passed 0"
> noErrors

> resetLogs

# Make sure specs don't get picked up from the src/main/assets directory
> mochaOnly MainAsset
> logged info "Passed: Total 0, Failed 0, Errors 0, Passed 0"
> noErrors

> resetLogs

# A test that depends on requires being required
> mochaOnly SetupSpec
> logged info "setup"
> logged info "+ should have been required"
> logged info "Passed: Total 1, Failed 0, Errors 0, Passed 1"
> noErrors

> resetLogs

# A failing test
-> mochaOnly FailingSpec
> logged info "a spec"
> logged info "x should be able to fail with an assertion error"
# The following log message varies slightly between node and rhino
# > logged error "AssertionError: true == false: Got value true but expected a value == false"
> logged error "Failed: Total 1, Failed 1, Errors 0, Passed 0"
> logged error "Failed tests:"
> logged error "FailingSpec.js"

> resetLogs

# An error test
-> mochaOnly ErrorSpec
> logged info "a spec"
> logged info "! should be able to fail with a generic error"
> logged error "Error: not happy"
> logged error "Error: Total 1, Failed 0, Errors 1, Passed 0"
> logged error "Error during tests:"
> logged error "ErrorSpec.js"

> resetLogs

# Custom test listeners
> set testListeners += MockListener
> mochaOnly HappyAssetSpec
> mockListenerInvoked

> set testListeners := testListeners.value.filterNot(_ == MockListener)
> resetLogs

# sbt configures testListeners in Test, so the below needs to work
> set (Test / testListeners) += MockListener
> mochaOnly HappyAssetSpec
> mockListenerInvoked

> set testListeners := testListeners.value.filterNot(_ == MockListener)
> resetLogs

# Run all mocha tests
-> mocha
> logged error "Error: Total 6, Failed 1, Errors 1, Passed 4"

# Run all tests including specs2, make sure the results get aggregated
-> test
> logged error "Error: Total 9, Failed 1, Errors 1, Passed 7"

$ exists project/target/node-modules/webjars/mocha/1.17.1
$ exists project/target/node-modules/webjars/mocha/3.0.0-2
